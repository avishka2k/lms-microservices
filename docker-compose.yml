version: '3.8'

services:
  vault:
    image: vault:1.13.3
    container_name: vault
    hostname: vault
    ports:
      - 8200:8200
    volumes:
      - ./vault/config.hcl:/vault/config/config.hcl
      - vault-data:/vault/file/
    environment:
      - VAULT_ADDR=http://localhost:8200
    cap_add:
      - IPC_LOCK
    command: server
    restart: always
    networks:
      - lms-network

  vault-init:
    image: vault:1.13.3
    container_name: vault-init
    environment:
      - VAULT_ADDR=http://vault:8200
      - MY_VAULT_TOKEN=${MY_VAULT_TOKEN:-test}
    volumes:
      - ./vault/vault-root-token:/vault/file/vault-root-token
      - ./vault/vault-init.sh:/usr/local/bin/vault-init.sh
      - vault-data:/vault/file/
    command: >
      sh -c "chmod +x /usr/local/bin/vault-init.sh &&
             /usr/local/bin/vault-init.sh"
    restart: on-failure
    depends_on:
      - vault
    networks:
      - lms-network

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - 8761:8761
    networks:
      - lms-network
    restart: always

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - 8888:8888
    networks:
      - lms-network
    restart: always

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - 8080:8080
    networks:
      - lms-network
    restart: always
    depends_on:
      - discovery-server

#  zipkin-server:
#    image: openzipkin/zipkin:latest
#    container_name: zipkin-server
#    ports:
#      - 9411:9411
#    networks:
#      - lms-network
#    restart: always

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - 8081:8081
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=
    volumes:
      - vault-data:/vault/file/
    networks:
      - lms-network
    depends_on:
      - vault
    restart: always

  university-service:
    build:
      context: ./university-service
      dockerfile: Dockerfile
    container_name: university-service
    ports:
      - 8082:8082
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=
    volumes:
      - vault-data:/vault/file/
    networks:
      - lms-network
    depends_on:
      - vault
    restart: always

  applicants-service:
    build:
      context: ./applicants-service
      dockerfile: Dockerfile
    container_name: applicants-service
    ports:
      - 8084:8084
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=
    volumes:
      - vault-data:/vault/file/
    networks:
      - lms-network
    depends_on:
      - vault
    restart: always

  announcement-service:
    build:
      context: ./announcement-service
      dockerfile: Dockerfile
    container_name: announcement-service
    ports:
      - 8086:8086
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=
    volumes:
      - vault-data:/vault/file/
    networks:
      - lms-network
    depends_on:
      - vault
    restart: always

networks:
  lms-network:
    driver: bridge

volumes:
  vault-data:
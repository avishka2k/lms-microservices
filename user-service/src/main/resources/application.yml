server:
    port: 8081

spring:
    application:
        name: user-service
    cloud:
        vault:
            uri: http://localhost:8200
            token: ${VAULT_TOKEN}
            kv:
                enabled: true
                backend: secret
                default-context: spring-boot-lms
            scheme: http
    config:
        import: vault://secret/spring-boot-lms
    datasource:
        url: ${vault.db_url}
        username: ${vault.db_username}
        password: ${vault.db_password}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
        properties:
            hibernate:
                format_sql: true
        database-platform: org.hibernate.dialect.PostgreSQLDialect
    security:
      oauth2:
          client:
              registration:
                cognito:
                  client-id: ${vault.cognito_client_id}
                  client-secret: ${vault.cognito_client_secret}
                  scope: openid, profile, email, aws.cognito.signin.user.admin
                  redirect-uri: http://localhost:8081/login/oauth2/code/cognito
                  client-name: ${vault.cognito_client_name}
                  authorization-grant-type: authorization_code
              provider:
                cognito:
                  user-info-uri: https://lmsmicro.auth.ap-southeast-1.amazoncognito.com/oauth2/userInfo # ${vault.cognito_user_info_uri}
                  issuer-uri: ${vault.cognito_issuer_uri}
          resourceserver:
            jwt:
              issuer-uri: ${vault.cognito_issuer_uri}

aws:
  region: ${vault.aws_region}
  accessKeyId: ${vault.aws_access_key}
  secretKey: ${vault.aws_secret_key}
  cognito:
    userPoolId: ${vault.cognito_user_pool_id}
    logoutUrl: ${vault.cognito_logout_uri}
    logout:
      success:
        redirectUrl: http://localhost:8081

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json

management:
  tracing:
    sampling:
        probability: 1.0
#eureka:
#    client:
#        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
#        registerWithEureka: true
#        fetchRegistry: true
#
#    instance:
#        preferIpAddress: true
#        instanceId: ${spring.application.name}:${server.port}:${random.value}
#        leaseRenewalIntervalInSeconds: 5
#        leaseExpirationDurationInSeconds: 10


logging:
  level:
    org.springframework.security: DEBUG
